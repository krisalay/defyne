# This workflow will build the source code and create a new github package.
# For more information see: https://github.com/marketplace/actions/build-and-push-docker-images

name: Build

on:
  push:
    branches:
      - master
      - develop
      - release/*
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest
    container: node:12-alpine
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install

    - name: Build the package
      run: npm run build

    - name: Remove node_modules
      run: rm -rf node_modules

    - name: Install production dependencies
      run: npm install --production

    - name: Build and push Docker images
      id: docker_build
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ github.actor }}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.GITHUB_TOKEN }}
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: docker.pkg.github.com
        # Docker repository to tag the image with
        repository: <github-repository-path>
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true
        tag_with_sha: true
        # Path to the build context
        path: .
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: Dockerfile
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of images to consider as cache sources
        cache_froms: <github-repository-path>:latest, <github-repository-path>:develop
        # Adds labels with git repository information to the built image
        add_git_labels: true
        # Whether to push the image
        push: true
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Get dev tag
        id: dev_image_tag
        run: echo "::set-output name=image_tag::sha-${GITHUB_SHA::7}"
      - name: Deploy in dev
        # run: echo ${{ steps.dev_image_tag.outputs.image_tag }}
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.DEV_KUBE_CONFIG_DATA }}
        with:
          args: set image deployment/<deployment-name> <deployment-name>=docker.pkg.github.com/<github-repository-path>:${{ steps.dev_image_tag.outputs.image_tag }} -n <namespace> --record

      - name: Verify deployment
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.DEV_KUBE_CONFIG_DATA }}
        with:
          args: '"rollout status deployment/<deployment-name> -n <namespace>"'
